{
  "name": "yodaspeak",
  "repository": {
    "url": "github:DopplerUniversity/yodaspeak"
  },
  "version": "1.0.0",
  "engines": {
    "node": "14.x"
  },
  "type": "module",
  "scripts": {
    "start": "node ./src/server",
    "local": "nodemon ./src/server",
    "debug": "node --inspect ./src/server",
    "lint": "eslint --fix --quiet",
    "format": "prettier --write --loglevel error .",
    "build-static": "node ./src/build.js",
    "serve-static": "node ./src/static-server.js",
    "docker-local": "DOPPLER_TOKEN=$(doppler configure get token --plain) DOPPLER_PROJECT=$(doppler configure get project --plain) DOPPLER_CONFIG=$(doppler configure get config --plain) bash -c 'docker container run --rm -it -e DOPPLER_TOKEN=$DOPPLER_TOKEN -e DOPPLER_PROJECT=$DOPPLER_PROJECT -e DOPPLER_CONFIG=$DOPPLER_CONFIG -p 8080:8080 doppleruniversity/yodaspeak doppler run -- npm start'",
    "docker-compose-local": "DOPPLER_TOKEN=$(doppler configure get token --plain) DOPPLER_PROJECT=$(doppler configure get project --plain) DOPPLER_CONFIG=$(doppler configure get config --plain) docker-compose -f docker-compose.yml -f docker-compose.dev-cli.yml up;docker-compose rm -fsv;"
  },
  "nodemonConfig": {
    "ext": "*.js,*.css,*.nunjucks",
    "events": {
      "restart": "npm run lint && npm run format"
    }
  },
  "dependencies": {
    "aws-param-store": "^3.2.0",
    "aws-sdk": "^2.768.0",
    "axios": "^0.19.2",
    "colors": "^1.4.0",
    "cookie-parser": "~1.4.4",
    "cors": "^2.8.5",
    "debug": "~2.6.9",
    "dotenv": "^8.2.0",
    "express": "~4.16.1",
    "express-rate-limit": "^5.1.3",
    "http-errors": "~1.6.3",
    "morgan": "~1.9.1",
    "nunjucks": "^3.2.2"
  },
  "devDependencies": {
    "eslint": "^7.5.0",
    "eslint-config-airbnb-base": "^14.2.0",
    "eslint-plugin-import": "^2.22.0",
    "ncp": "^2.0.0",
    "nodemon": "^2.0.4",
    "prettier": "2.0.5"
  }
}
